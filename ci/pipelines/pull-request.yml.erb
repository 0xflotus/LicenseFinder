<% setup_slack = defined?(slack_url) && defined?(slack_channel) %>
<% ruby_versions = ruby_versions.split(',') %>

resource_types:
- name: pull-request
  type: docker-image
  source:
    repository: jtarchie/pr

<% if setup_slack %>
- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource
    tag: latest
<% end %>

resources:
- name: pull-request
  type: pull-request
  source:
    repo: pivotal-legacy/LicenseFinder
    base: master
    access_token: ((GithubApiPullRequestToken))

- name: dockerhub-pr
  type: docker-image
  source:
    tag: edge-pr
    repository: licensefinder/license_finder
    email: ((LicenseFinderDockerEmail))
    username: ((LicenseFinderDocker.username))
    password: ((LicenseFinderDocker.password))

<% if setup_slack %>
- name: slack-alert
  type: slack-notification
  source:
    url: <%= slack_url %>
<% end %>

jobs:
- name: build-docker-image
  public: true
  plan:
    - get: pull-request
      trigger: true
    - put: dockerhub-pr
      params:
        build: pull-request
<% ruby_versions.each do |ruby_version| %>
- name: PR-ruby-<%= ruby_version %>-linux
  public: true
  plan:
  - get: pull-request
    passed: [build-docker-image]
    version: every
  - get: dockerhub-pr
    passed: [build-docker-image]
    trigger: true
  - task: ruby-<%= ruby_version %>
    privileged: true
    image: dockerhub-pr
    file: pull-request/ci/tasks/run-tests.yml
    params:
      RUBY_VERSION_UNDER_TEST: <%= ruby_version %>
    input_mapping: { LicenseFinder: pull-request }
    on_success:
      put: pull-request
      params:
        path: pull-request
        status: success
        context: ruby-<%= ruby_version %>
    on_failure:
      put: pull-request
      params:
        path: pull-request
        status: failure
        context: ruby-<%= ruby_version %>
<% if setup_slack %>
  on_failure:
    put: slack-alert
    params:
      channel: '<%= slack_channel %>'
      icon_emoji: ':crying_cat_face:'
      text: '<%= "License Finder build failed. Build: https://norsk.cf-app.com/teams/main/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME" %>'
<% end %>
<% end %>

- name: PR-rubocop
  public: true
  plan:
  - get: pull-request
    trigger: true
    version: every
  - task: run-rubocop
    privileged: true
    file: pull-request/ci/tasks/rubocop.yml
    input_mapping: { LicenseFinder: pull-request }
    on_success:
      put: pull-request
      params:
        path: pull-request
        status: success
        context: run-rubocop
    on_failure:
      put: pull-request
      params:
        path: pull-request
        status: failure
        context: run-rubocop
